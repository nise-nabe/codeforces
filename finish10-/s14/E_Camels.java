package s14;
/**
 * まず，線の引き方がどのくらいあるかを考えてみる．（答えの最大値？）
 * n個のx軸の離散値が存在し，m個のy軸の取りうる離散値が存在するとき，
 * （それぞれの軸において任意の離散値に全順序関係があるということになる）
 * それぞれのx軸の離散値において一つのy軸の離散値を選択した点をつないだ線
 * の総数は，y軸の離散値の決定をそれぞれのx軸の離散値において行うため，
 * m^n個の点のとり方（＝線の引き方）がある．（この問題の場合は問題文からm=4）
 * さらに，この問題の場合は平地が存在しない（x軸の任意の離散値の隣接値において
 * y軸の離散値が同じ値をとらない）という条件が存在するため，最初の点の場合は
 * 直前の点が存在しないのでm通りだが，残りのn-1個の点の場合は直前の値と同じ
 * 値を選択することが出来ない（この問題の場合，x_i-1=1のときのx_iの選択可能値
 * は2,3,4の３つ，x_i-1=2のときのx_iの選択可能値は1,3,4の３…とそれぞれの値に
 * おいてそうなる）ため，m*(m-1)^(n-1)通りの点のとり方（＝線の引き方）がある．
 * 　問題ではそのm*(m-1)^(n-1)通りの線の引き方から山がt個となる線の引き方を
 * 求める必要がある．テキトーな考え方としては，一つの線の引き方には山の数は一意
 * に決まると考えられることから，線の引き方すべてにおいてその線に置ける山の数
 * を数え上げて，山の数が問題と一致する線の数をカウントすることで答えが得られる
 * と思われる．山とは極大点（ある点x_iのy_iの値が前後の点x_i-1とx_i+1の値
 * y_i-1,y_i+1の値よりも大きい点）のことであり，一つの線の引き方において
 * 極大点はその線の引き方のすべての点を走査することで得られると考えられ，
 * その計算量は線形（O(n))であると思われる．それをそれぞれの線の引き方において
 * 計算するとO(n*m^n)となる．この問題の場合mは4であるとして，nは20であるため
 * 2^40という大きすぎる計算量である．
 * 　あるx軸の値iにおける山の数Mのときの線の引き方の総数S(i,M)は
 * S(i,M)|3≦i≦20,0≦M≦(int)((i-1)/2)=9
 * (i=0，i=1，i=2のとき0個（山ができる条件を満たせない）)
 * i=3のとき
 * 　
 * 
 * 
 *
 */
public class E_Camels {
public static void main(String[] args) {
	int n=20,m=4;
	int[][][][]dp={};
	for(int i=2;i<n;++i){ // 
		for(int y2=0;y2<m;++y2){
			for(int y1=0;y1<m;++y1){
				if(y2!=y1){
					for(int y=0;y<m;++y){
					}
				}
			}
		}
	}
}
static int isMount(int y2, int y1, int y){
	return y2<y1&&y1>y?1:0;
}
}
